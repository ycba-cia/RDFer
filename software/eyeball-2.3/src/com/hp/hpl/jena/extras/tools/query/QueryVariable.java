/*
 (c) Copyright 2005 Hewlett-Packard Development Company, LP
 All rights reserved - see end of file.
 $Id: QueryVariable.java,v 1.1 2010/03/19 14:34:04 chris-dollin Exp $
 */

package com.hp.hpl.jena.extras.tools.query;

import java.util.List;

import com.hp.hpl.jena.graph.Node;
import com.hp.hpl.jena.rdf.model.*;
import com.hp.hpl.jena.rdf.model.impl.*;

/**
    A QueryVariable represents a variable in a ModelQuery pattern and can be 
    used to extract values from the results of a ModelQuery.run().
    
    <p>QueryVariables are constructed using the ModelQuery.createVariable()
    methods.
    
    @author kers
*/
public class QueryVariable extends ResourceImpl implements Resource
    {
    final int index;
    final ModelQuery parent;
    final String name;

    private final Model emptyModel = ModelFactory.createDefaultModel();
    
    protected QueryVariable( ModelQuery parent, String name, int index )
        {
        super();
        this.parent = parent;
        this.index = index;
        this.name = name;
        }

    /**
        Answer the ModelQuery which manufactured this QueryVariable.
    */
    public ModelQuery parent()
        { return parent; }
    
    /**
        Answer the value this QueryVariable identifies in the result binding list
        <code>values</code>, which should be an element from an iterator
        generated by run() on this QueryVariable's parent().
    */
    public RDFNode value( List<Node> values )
        { return emptyModel.getRDFNode( values.get( index ) ); }

    /**
        Answer the Literal value this QueryVariable identifies in the result binding
        <code>values</code>. If the underlying node is not a literal, throw an
        exception. <code>values</code> should be an element from an iterator
        generated by run() on this QueryVariable's parent().
    */
    public Literal literal( List<Node> values )
        { return (Literal) value( values ).as( Literal.class ); }

    /**
        Answer the Resource value this QueryVariable identifies in the result binding
        <code>values</code>. If the underlying node is not a Resource, throw an
        exception. <code>values</code> should be an element from an iterator
        generated by run() on this QueryVariable's parent().
    */
    public Resource resource( List<Node> values )
        { return (Resource) value( values ).as( Resource.class ); }
    
    /**
        Answer a nice presentation of this QueryVariable [currently, its name] 
    */
    public String toString()
        { return name; }
    }

/*
 * (c) Copyright 2005 Hewlett-Packard Development Company, LP All rights
 * reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer. 2. Redistributions in
 * binary form must reproduce the above copyright notice, this list of
 * conditions and the following disclaimer in the documentation and/or other
 * materials provided with the distribution. 3. The name of the author may not
 * be used to endorse or promote products derived from this software without
 * specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
 * EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */